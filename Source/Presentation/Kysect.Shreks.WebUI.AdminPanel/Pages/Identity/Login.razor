@page "/adminpanel/identity/login"
@using Kysect.Shreks.WebUI.AdminPanel.Identity
@using Kysect.Shreks.WebUI.AdminPanel.ExceptionHandling
@layout EmptyLayout
@inject IdentityStateProvider StateProvider
@inject NavigationManager NavigationManager
@inject ISafeExecutor SafeExecutor
@attribute [AllowAnonymous]

<Div Flex="Flex.Column.JustifyContent.Center.AlignItems.Center" Height="Height.Is100">
    <Form Padding="Padding.Is5.FromTop" style="width: 30%">
        <Field>
            <TextEdit Placeholder="Username" @bind-Text="_username"/>
        </Field>

        <Field>
            <TextEdit Placeholder="Password" Role="@TextRole.Password" @bind-Text="_password"/>
        </Field>

        <Div Flex="Flex.JustifyContent.Center">
            <Button Color="Color.Primary"
                    Clicked="OnLoginButtonClickedAsync"
                    Type="@ButtonType.Submit"
                    PreventDefaultOnSubmit>
                Login
            </Button>
        </Div>
    </Form>
</Div>

@code {

    private string? _username;
    private string? _password;

    private async Task OnLoginButtonClickedAsync()
    {
        if (_username is null || _password is null)
            return;

        await using var builder = SafeExecutor.Execute(() => StateProvider.LoginAsync(_username, _password, default));

        builder.Title = "Login failed";

        builder.OnSuccessAsync(() =>
        {
            NavigationManager.NavigateTo("/", true);
            return Task.CompletedTask;
        });
    }

}
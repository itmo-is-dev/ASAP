@using Kysect.Shreks.WebUI.AdminPanel.Models
@using Kysect.Shreks.Application.Dto.SubjectCourses
@using Kysect.Shreks.Application.Dto.Study
@using Kysect.Shreks.WebUI.AdminPanel.Components.Groups
@inject IStudyGroupClient StudyGroupClient

@if (_groups is not null)
{
    <Div>
        @foreach (var group in _groups.OrderBy(x => x.Group.Name))
        {
            <StudyGroupInfoComponent Group="@group.Group"/>
        }
    </Div>
}
else
{
    <LoaderComponent/>
}

@code {

    private IReadOnlyCollection<ExtendedSubjectCourseGroupDto>? _groups;

    [Parameter]
    public IReadOnlyCollection<SubjectCourseGroupDto>? SubjectCourseGroups { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (SubjectCourseGroups is null)
            return;

        IEnumerable<Guid> groupIds = SubjectCourseGroups.Select(x => x.StudentGroupId);
        IReadOnlyCollection<StudyGroupDto> studyGroups = await StudyGroupClient.GetAsync(groupIds);

        _groups = SubjectCourseGroups.Join
            (
                studyGroups,
                x => x.StudentGroupId,
                x => x.Id,
                (courseGroup, group) => (courseGroup, group)
            )
            .Select(pair => new ExtendedSubjectCourseGroupDto(pair.courseGroup, pair.group))
            .ToArray();
    }

}
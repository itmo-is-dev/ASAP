@using Kysect.Shreks.Application.Dto.Querying;
@using Kysect.Shreks.Application.Dto.Users;
@using Kysect.Shreks.WebApi.Sdk.ControllerClients;
@using Kysect.Shreks.WebUI.AdminPanel.Components.Query;
@using Kysect.Shreks.WebUI.AdminPanel.ExceptionHandling

@inject IStudentClient StudentClient

<QueryComponent TParameter="@StudentQueryParameter"
                TValue="@StudentDto"
                QueryExecutor="QueryAsync">
    <Table Context="students">

        @if (StudentTable is not null)
        {
            @StudentTable.Invoke(students)
        }
        else
        {
            <StudentTableComponent Students="students"/>
        }
    </Table>
</QueryComponent>


@code
{

    [Parameter]
    public RenderFragment<IReadOnlyCollection<StudentDto>?>? StudentTable { get; set; }

    private Task<IReadOnlyCollection<StudentDto>> QueryAsync(QueryConfiguration<StudentQueryParameter> configuration)
        => StudentClient.QueryAsync(configuration);
}
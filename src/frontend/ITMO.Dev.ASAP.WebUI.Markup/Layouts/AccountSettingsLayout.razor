@using ITMO.Dev.ASAP.Application.Dto.Users
@using ITMO.Dev.ASAP.WebApi.Sdk.ControllerClients
@using ITMO.Dev.ASAP.WebUI.Abstractions.ExceptionHandling
@using ITMO.Dev.ASAP.WebUI.Abstractions.Extensions
@using ITMO.Dev.ASAP.WebUI.Abstractions.SafeExecution
@inherits LayoutComponentBase
@layout MainLayout
@inject IUserClient UserClient
@inject ISafeExecutor SafeExecutor

<CascadingValue Value="_user">
    <Layout Sider Height="Height.Is100">

        <LayoutSider Background="Background.Transparent">
            <LayoutSiderContent>
                <Bar Mode="BarMode.VerticalPopout"
                     Style="box-shadow: 5px 4px 5px 0 rgba(0, 21, 41, 0.35)">

                    <BarMenu>
                        <BarStart>
                            <BarItem>
                                <BarLink To="adminpanel/account/credentials"
                                         Padding="Padding.Is0">

                                    <Div Flex="Flex.Row.AlignItems.Center"
                                         Padding="Padding.Is2">

                                        <Icon Name="IconName.Key"
                                              Margin="Margin.Is2.FromEnd.Is2.FromStart"/>

                                        Credentials
                                    </Div>
                                </BarLink>
                            </BarItem>

                            <Divider Margin="Margin.Is0"/>
                        </BarStart>
                    </BarMenu>
                </Bar>
            </LayoutSiderContent>
        </LayoutSider>

        <Layout Padding="Padding.Is3">
            <LayoutHeader Flex="Flex.JustifyContent.Start">
                <Heading Size="HeadingSize.Is2">
                    @(_user?.FullName())
                </Heading>
            </LayoutHeader>
            <LayoutContent>
                @Body
            </LayoutContent>
        </Layout>

    </Layout>
</CascadingValue>

@code {

    private UserDto? _user;

    protected override async Task OnParametersSetAsync()
    {
        await using ISafeExecutionBuilder<UserDto?> builder = SafeExecutor.Execute(() => UserClient.FindCurrentUserAsync(default));

        builder.Title = "Failed to load user";

        builder.OnSuccess(x => _user = x);
    }

}
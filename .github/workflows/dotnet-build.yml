name: .NET
concurrency: dotnet-build

on:
  pull_request:
    branches: [ master, dev ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/dotnet-build.yml'

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v2

      - name: Cache testing results
        id: cache-tests
        uses: actions/cache@v3
        with:
          path: ./allure-results
          key: ${{ runner.os }}-${{ hashFiles('src/**', 'tests/**') }}-test-results

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        if: ${{ !steps.cache-tests.outputs.cache-hit }}
        with:
          dotnet-version: 7.0.203

      - name: Cache nuget packages
        uses: actions/cache@v3
        if: ${{ !steps.cache-tests.outputs.cache-hit }}
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/*.Packages.props', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        if: ${{ !steps.cache-tests.outputs.cache-hit }}
        run: dotnet restore ITMO.Dev.ASAP.sln

      - name: Build
        if: ${{ !steps.cache-tests.outputs.cache-hit }}
        run: dotnet build ITMO.Dev.ASAP.sln -c Release --no-restore

      - name: Test
        if: ${{ !steps.cache-tests.outputs.cache-hit }}
        run: dotnet test ITMO.Dev.ASAP.sln -c Release --no-restore --no-build -l trx --results-directory ./allure-results

  compile-allure:
    name: Compile allure pages
    runs-on: ubuntu-latest
    permissions: write-all
    needs: build
    concurrency: allure
    
    steps:
      - uses: actions/checkout@v2

      - name: Cache testing results
        id: cache-tests
        uses: actions/cache@v3
        with:
          path: ./allure-results
          key: ${{ runner.os }}-${{ hashFiles('src/**', 'tests/**') }}-test-results

      - name: Download and extract history
        run: |
          curl https://asap-allure-reports.website.yandexcloud.net/ -o allure-history.tar
          tar xvf allure-history.tar
          rm -f allure-history.tar

      - name: Generate Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          subfolder: ${{ github.event.number }}
          keep_reports: 20

      - name: Compress allure results
        run: |
          tar cvf ./allure-history.tar ./allure-history

      - name: Upload files to Object Storage
        id: s3-upload
        uses: yc-actions/yc-obj-storage-upload@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEY }}
          bucket: ${{ secrets.YC_BUCKET }}
          root: .
          include: allure-history.tar

      - name: Upload GitHub Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v1.0.8
        with:
          path: "${{ github.workspace }}/allure-history"
  
  deploy-pages:
    name: Deploy test summary to GitHub Pages
    runs-on: ubuntu-latest
    permissions: write-all
    needs: compile-allure

    environment:
      name: github-pages
      url: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.event.number }}/${{ github.run_number }}
    
    steps:
      - name: Deploy Github Pages
        id: deployment
        uses: actions/deploy-pages@v2.0.1

      - name: Post report link to pull request
        uses: mshick/add-pr-comment@v2
        with:
          refresh-message-position: true
          message: |
            Link to allure test run:  
            $url